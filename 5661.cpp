/*

题目描述
    著名旅游城市 B
市为了鼓励大家采用公共交通方式出行，推出了一种地铁换乘公交车的优惠方案：

    1.在搭乘一次地铁后可以获得一张优惠票，有效期为 45 分钟，在有效期内可以
    消耗这张优惠票，免费搭乘一次票价不超过地铁票价的公交车。
    在有效期内指开始乘公交车的时间与开始乘地铁的时间之差小于等于 45 分钟，即：
    tbus - tsubway <= 45

    2.搭乘地铁获得的优惠票可以累积，即可以连续搭乘若干次地铁后再连续使用优惠票搭乘公交车。

    3.搭乘公交车时，如果可以使用优惠票一定会使用优惠票；如果有多张优惠票满足条件，则优先消耗获得最早的优惠票。

    现在你得到了小轩最近的公共交通出行记录，你能帮他算算他的花费吗?

输入格式
    输入文件的第一行包含一个正整数 n，代表乘车记录的数量。

    接下来的 n 行，每行包含 3 个整数，相邻两数之间以一个空格分隔。
    第 i 行的第 1 个整数代表第 i 条记录乘坐的交通工具，0 代表地铁，1
代表公交车； 第 2 个整数代表第 i 条记录乘车的票价 pricei ； 第三个整数代表第 i
条记录开始乘车的时间 ti （距 0 时刻的分钟数）。

    我们保证出行记录是按照开始乘车的时间顺序给出的，且不会有两次乘车记录出现在同一分钟。

输出格式
    输出文件有一行，包含一个正整数，代表小轩出行的总花费。

*/

/*

思路
    记录类型、票价、时间。
    枚举记录，查看优惠，判断条件，记录总钱数。
优化
    记录有效优惠范围，减少枚举范围。
复杂度
    时间：
        优化前：O(pow(n,2)) TLE
        优化后：O(n) 595ms AC
    空间：O(n) 1.55MB
*/

#include <iostream>

using namespace std;

int n, ans = 0, m = 0;                // 乘车数、答案、有效优惠范围
int b[100000], p[100000], t[100000];  // 类型、票价、时间

int main()
{
    cin >> n;  // 输入乘车数
    for (int i = 0; i < n; i++)
    {
        int f = 0;                    // 优惠标志
        cin >> b[i] >> p[i] >> t[i];  // 输入类型、票价、时间
        if (b[i] == 1)
        {  // 判断类型
            for (int j = m; j < i; j++)
            {  // 枚举优惠
                if ((t[i] - t[j]) <= 45 && b[j] == 0 && p[i] <= p[j])
                {              // 判断条件，进行优惠
                    b[j] = 1;  // 取消优惠
                    f = 1;     // 优惠
                    break;     // 退出枚举
                } else if ((t[i] - t[j]) > 45)
                {               // 记录有效优惠范围
                    m = j + 1;  // 更改范围
                }
            }
        }
        if (f)
            continue;  // 查看是否优惠
        ans += p[i];   // 记录答案
    }
    cout << ans;  // 输出答案
    return 0;
}
